import numpy as np


def get_closest_index(num: int, l: list):
    diff = 9999
    index = -1
    for v in l:
        if diff > abs(num - v):
            diff = abs(num - v)
            index = l.index(v)
    return index


def f05_distr(col, row):
    table = np.array([
        [161.4476, 199.5000, 215.7073, 224.5832, 230.1619, 233.9860, 236.7684, 238.8827, 240.5433, 241.8817, 243.9060, 245.9499, 248.0131, 249.0518, 250.0951, 251.1432, 252.1957, 253.2529, 254.3144],  # 1
        [18.5128, 19.0000, 19.1643, 19.2468, 19.2964, 19.3295, 19.3532, 19.3710, 19.3848, 19.3959, 19.4125, 19.4291, 19.4458, 19.4541, 19.4624, 19.4707, 19.4791, 19.4874, 19.4957],  # 2
        [10.1280, 9.5521, 9.2766, 9.1172, 9.0135, 8.9406, 8.8867, 8.8452, 8.8123, 8.7855, 8.7446, 8.7029, 8.6602, 8.6385, 8.6166, 8.5944, 8.5720, 8.5494, 8.5264],  # 3
        [7.7086, 6.9443, 6.5914, 6.3882, 6.2561, 6.1631, 6.0942, 6.0410, 5.9988, 5.9644, 5.9117, 5.8578, 5.8025, 5.7744, 5.7459, 5.7170, 5.6877, 5.6581, 5.6281],  # 4
        [6.6079, 5.7861, 5.4095, 5.1922, 5.0503, 4.9503, 4.8759, 4.8183, 4.7725, 4.7351, 4.6777, 4.6188, 4.5581, 4.5272, 4.4957, 4.4638, 4.4314, 4.3985, 4.3650],  # 5
        [5.9874, 5.1433, 4.7571, 4.5337, 4.3874, 4.2839, 4.2067, 4.1468, 4.0990, 4.0600, 3.9999, 3.9381, 3.8742, 3.8415, 3.8082, 3.7743, 3.7398, 3.7047, 3.6689],  # 6
        [5.5914, 4.7374, 4.3468, 4.1203, 3.9715, 3.8660, 3.7870, 3.7257, 3.6767, 3.6365, 3.5747, 3.5107, 3.4445, 3.4105, 3.3758, 3.3404, 3.3043, 3.2674, 3.2298],  # 7
        [5.3177, 4.4590, 4.0662, 3.8379, 3.6875, 3.5806, 3.5005, 3.4381, 3.3881, 3.3472, 3.2839, 3.2184, 3.1503, 3.1152, 3.0794, 3.0428, 3.0053, 2.9669, 2.9276],  # 8
        [5.1174, 4.2565, 3.8625, 3.6331, 3.4817, 3.3738, 3.2927, 3.2296, 3.1789, 3.1373, 3.0729, 3.0061, 2.9365, 2.9005, 2.8637, 2.8259, 2.7872, 2.7475, 2.7067],  # 9
        [4.9646, 4.1028, 3.7083, 3.4780, 3.3258, 3.2172, 3.1355, 3.0717, 3.0204, 2.9782, 2.9130, 2.8450, 2.7740, 2.7372, 2.6996, 2.6609, 2.6211, 2.5801, 2.5379],  # 10
        [4.8443, 3.9823, 3.5874, 3.3567, 3.2039, 3.0946, 3.0123, 2.9480, 2.8962, 2.8536, 2.7876, 2.7186, 2.6464, 2.6090, 2.5705, 2.5309, 2.4901, 2.4480, 2.4045],  # 11
        [4.7472, 3.8853, 3.4903, 3.2592, 3.1059, 2.9961, 2.9134, 2.8486, 2.7964, 2.7534, 2.6866, 2.6169, 2.5436, 2.5055, 2.4663, 2.4259, 2.3842, 2.3410, 2.2962],  # 12
        [4.6672, 3.8056, 3.4105, 3.1791, 3.0254, 2.9153, 2.8321, 2.7669, 2.7144, 2.6710, 2.6037, 2.5331, 2.4589, 2.4202, 2.3803, 2.3392, 2.2966, 2.2524, 2.2064],  # 13
        [4.6001, 3.7389, 3.3439, 3.1122, 2.9582, 2.8477, 2.7642, 2.6987, 2.6458, 2.6022, 2.5342, 2.4630, 2.3879, 2.3487, 2.3082, 2.2664, 2.2229, 2.1778, 2.1307],  # 14
        [4.5431, 3.6823, 3.2874, 3.0556, 2.9013, 2.7905, 2.7066, 2.6408, 2.5876, 2.5437, 2.4753, 2.4034, 2.3275, 2.2878, 2.2468, 2.2043, 2.1601, 2.1141, 2.0658],  # 15
        [4.4940, 3.6337, 3.2389, 3.0069, 2.8524, 2.7413, 2.6572, 2.5911, 2.5377, 2.4935, 2.4247, 2.3522, 2.2756, 2.2354, 2.1938, 2.1507, 2.1058, 2.0589, 2.0096],  # 16
        [4.4513, 3.5915, 3.1968, 2.9647, 2.8100, 2.6987, 2.6143, 2.5480, 2.4943, 2.4499, 2.3807, 2.3077, 2.2304, 2.1898, 2.1477, 2.1040, 2.0584, 2.0107, 1.9604],  # 17
        [4.4139, 3.5546, 3.1599, 2.9277, 2.7729, 2.6613, 2.5767, 2.5102, 2.4563, 2.4117, 2.3421, 2.2686, 2.1906, 2.1497, 2.1071, 2.0629, 2.0166, 1.9681, 1.9168],  # 18
        [4.3807, 3.5219, 3.1274, 2.8951, 2.7401, 2.6283, 2.5435, 2.4768, 2.4227, 2.3779, 2.3080, 2.2341, 2.1555, 2.1141, 2.0712, 2.0264, 1.9795, 1.9302, 1.8780],  # 19
        [4.3512, 3.4928, 3.0984, 2.8661, 2.7109, 2.5990, 2.5140, 2.4471, 2.3928, 2.3479, 2.2776, 2.2033, 2.1242, 2.0825, 2.0391, 1.9938, 1.9464, 1.8963, 1.8432],  # 20
        [4.3248, 3.4668, 3.0725, 2.8401, 2.6848, 2.5727, 2.4876, 2.4205, 2.3660, 2.3210, 2.2504, 2.1757, 2.0960, 2.0540, 2.0102, 1.9645, 1.9165, 1.8657, 1.8117],  # 21
        [4.3009, 3.4434, 3.0491, 2.8167, 2.6613, 2.5491, 2.4638, 2.3965, 2.3419, 2.2967, 2.2258, 2.1508, 2.0707, 2.0283, 1.9842, 1.9380, 1.8894, 1.8380, 1.7831],  # 22
        [4.2793, 3.4221, 3.0280, 2.7955, 2.6400, 2.5277, 2.4422, 2.3748, 2.3201, 2.2747, 2.2036, 2.1282, 2.0476, 2.0050, 1.9605, 1.9139, 1.8648, 1.8128, 1.7570],  # 23
        [4.2597, 3.4028, 3.0088, 2.7763, 2.6207, 2.5082, 2.4226, 2.3551, 2.3002, 2.2547, 2.1834, 2.1077, 2.0267, 1.9838, 1.9390, 1.8920, 1.8424, 1.7896, 1.7330],  # 24
        [4.2417, 3.3852, 2.9912, 2.7587, 2.6030, 2.4904, 2.4047, 2.3371, 2.2821, 2.2365, 2.1649, 2.0889, 2.0075, 1.9643, 1.9192, 1.8718, 1.8217, 1.7684, 1.7110],  # 25
        [4.2252, 3.3690, 2.9752, 2.7426, 2.5868, 2.4741, 2.3883, 2.3205, 2.2655, 2.2197, 2.1479, 2.0716, 1.9898, 1.9464, 1.9010, 1.8533, 1.8027, 1.7488, 1.6906],  # 26
        [4.2100, 3.3541, 2.9604, 2.7278, 2.5719, 2.4591, 2.3732, 2.3053, 2.2501, 2.2043, 2.1323, 2.0558, 1.9736, 1.9299, 1.8842, 1.8361, 1.7851, 1.7306, 1.6717],  # 27
        [4.1960, 3.3404, 2.9467, 2.7141, 2.5581, 2.4453, 2.3593, 2.2913, 2.2360, 2.1900, 2.1179, 2.0411, 1.9586, 1.9147, 1.8687, 1.8203, 1.7689, 1.7138, 1.6541],  # 28
        [4.1830, 3.3277, 2.9340, 2.7014, 2.5454, 2.4324, 2.3463, 2.2783, 2.2229, 2.1768, 2.1045, 2.0275, 1.9446, 1.9005, 1.8543, 1.8055, 1.7537, 1.6981, 1.6376],  # 29
        [4.1709, 3.3158, 2.9223, 2.6896, 2.5336, 2.4205, 2.3343, 2.2662, 2.2107, 2.1646, 2.0921, 2.0148, 1.9317, 1.8874, 1.8409, 1.7918, 1.7396, 1.6835, 1.6223],  # 30
        [4.0847, 3.2317, 2.8387, 2.6060, 2.4495, 2.3359, 2.2490, 2.1802, 2.1240, 2.0772, 2.0035, 1.9245, 1.8389, 1.7929, 1.7444, 1.6928, 1.6373, 1.5766, 1.5089],  # 40
        [4.0012, 3.1504, 2.7581, 2.5252, 2.3683, 2.2541, 2.1665, 2.0970, 2.0401, 1.9926, 1.9174, 1.8364, 1.7480, 1.7001, 1.6491, 1.5943, 1.5343, 1.4673, 1.3893],  # 60
        [3.9201, 3.0718, 2.6802, 2.4472, 2.2899, 2.1750, 2.0868, 2.0164, 1.9588, 1.9105, 1.8337, 1.7505, 1.6587, 1.6084, 1.5543, 1.4952, 1.4290, 1.3519, 1.2539],  # 120
        [3.8415, 2.9957, 2.6049, 2.3719, 2.2141, 2.0986, 2.0096, 1.9384, 1.8799, 1.8307, 1.7522, 1.6664, 1.5705, 1.5173, 1.4591, 1.3940, 1.3180, 1.2214, 1.0000]   # INF
    ])
    rows = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
            21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 40, 60, 120, 99999999999]
    cols = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 20, 24, 30, 40, 60, 120, 99999999999]
    row_i = get_closest_index(row, rows)
    col_i = get_closest_index(col, cols)
    return table[row_i, col_i]


def t_crit(col, row):
    table = np.array([
        [3.0770, 6.3130, 12.7060, 31.820, 63.656, 127.656, 318.306, 636.619],
        [1.8850, 2.9200, 4.3020, 6.964, 9.924, 14.089, 22.327, 31.599],
        [1.6377, 2.35340, 3.182, 4.540, 5.840, 7.458, 10.214, 12.924],
        [1.5332, 2.13180, 2.776, 3.746, 4.604, 5.597, 7.173, 8.610],
        [1.4759, 2.01500, 2.570, 3.649, 4.0321, 4.773, 5.893, 6.863],
        [1.4390, 1.943, 2.4460, 3.1420, 3.7070, 4.316, 5.2070, 5.958],
        [1.4149, 1.8946, 2.3646, 2.998, 3.4995, 4.2293, 4.785, 5.4079],
        [1.3968, 1.8596, 2.3060, 2.8965, 3.3554, 3.832, 4.5008, 5.0413],
        [1.3830, 1.8331, 2.2622, 2.8214, 3.2498, 3.6897, 4.2968, 4.780],
        [1.3720, 1.8125, 2.2281, 2.7638, 3.1693, 3.5814, 4.1437, 4.5869],
        [1.363, 1.795, 2.201, 2.718, 3.105, 3.496, 4.024, 4.437],
        [1.3562, 1.7823, 2.1788, 2.6810, 3.0845, 3.4284, 3.929, 4.178],
        [1.3502, 1.7709, 2.1604, 2.6503, 3.1123, 3.3725, 3.852, 4.220],
        [1.3450, 1.7613, 2.1448, 2.6245, 2.976, 3.3257, 3.787, 4.140],
        [1.3406, 1.7530, 2.1314, 2.6025, 2.9467, 3.2860, 3.732, 4.072],
        [1.3360, 1.7450, 2.1190, 2.5830, 2.9200, 3.2520, 3.6860, 4.0150],
        [1.3334, 1.7396, 2.1098, 2.5668, 2.8982, 3.2224, 3.6458, 3.965],
        [1.3304, 1.7341, 2.1009, 2.5514, 2.8784, 3.1966, 3.6105, 3.9216],
        [1.3277, 1.7291, 2.0930, 2.5395, 2.8609, 3.1737, 3.5794, 3.8834],
        [1.3253, 1.7247, 2.08600, 2.5280, 2.8453, 3.1534, 3.5518, 3.8495],
        [1.3230, 1.7200, 2.079, 2.5170, 2.8310, 3.1350, 3.5270, 3.8190],
        [1.3212, 1.7117, 2.0739, 2.5083, 2.8188, 3.1188, 3.5050, 3.7921],
        [1.3195, 1.7139, 2.0687, 2.4999, 2.8073, 3.1040, 3.4850, 3.7676],
        [1.3178, 1.7109, 2.0639, 2.4922, 2.7969, 3.0905, 3.4668, 3.7454],
        [1.3163, 1.7081, 2.0595, 2.4851, 2.7874, 3.0782, 3.4502, 3.7251],
        [1.315, 1.705, 2.059, 2.478, 2.778, 3.0660, 3.4360, 3.7060],
        [1.3137, 1.7033, 2.0518, 2.4727, 2.7707, 3.0565, 3.4210, 3.6896],
        [1.3125, 1.7011, 2.0484, 2.4671, 2.7633, 3.0469, 3.4082, 3.6739],
        [1.3114, 1.6991, 2.0452, 2.4620, 2.7564, 3.0360, 3.3962, 3.8494],
        [1.3104, 1.6973, 2.0423, 2.4573, 2.7500, 3.0298, 3.3852, 3.6460],
        [1.3080, 1.6930, 2.0360, 2.4480, 2.7380, 3.0140, 3.3650, 3.6210],
        [1.3070, 1.6909, 2.0322, 2.4411, 2.7284, 3.9520, 3.3479, 3.6007],
        [1.3050, 1.6883, 2.0281, 2.4345, 2.7195, 9.490, 3.3326, 3.5821],
        [1.3042, 1.6860, 2.0244, 2.4286, 2.7116, 3.9808, 3.3190, 3.5657],
        [1.303, 1.6839, 2.0211, 2.4233, 2.7045, 3.9712, 3.3069, 3.5510],
        [1.320, 1.682, 2.018, 2.418, 2.6980, 2.6930, 3.2960, 3.5370],
        [1.301, 1.6802, 2.0154, 2.4141, 2.6923, 3.9555, 3.2861, 3.5258],
        [1.300, 1.6767, 2.0129, 2.4102, 2.6870, 3.9488, 3.2771, 3.5150],
        [1.299, 1.6772, 2.0106, 2.4056, 2.6822, 3.9426, 3.2689, 3.5051],
        [1.298, 1.6759, 2.0086, 2.4033, 2.6778, 3.9370, 3.2614, 3.4060],
        [1.2997, 1.673, 2.0040, 2.3960, 2.6680, 2.9240, 3.2560, 3.4760],
        [1.2958, 1.6706, 2.0003, 2.3901, 2.6603, 3.9146, 3.2317, 3.4602],
        [1.2947, 1.6686, 1.997, 2.3851, 2.6536, 3.9060, 3.2204, 3.4466],
        [1.2938, 1.6689, 1.9944, 2.3808, 2.6479, 3.8987, 3.2108, 3.4350],
        [1.2820, 1.6640, 1.9900, 2.3730, 2.6380, 2.8870, 3.1950, 3.4160],
        [1.2910, 1.6620, 1.9867, 2.3885, 2.6316, 2.8779, 3.1833, 3.4019],
        [1.2901, 1.6602, 1.9840, 2.3642, 2.6259, 2.8707, 3.1737, 3.3905],
        [1.2888, 1.6577, 1.9719, 2.3578, 2.6174, 2.8598, 3.1595, 3.3735],
        [1.2872, 1.6551, 1.9759, 2.3515, 2.6090, 2.8482, 3.1455, 3.3566],
        [1.2858, 1.6525, 1.9719, 2.3451, 2.6006, 2.8385, 3.1315, 3.3398],
        [1.2849, 1.6510, 1.9695, 2.3414, 2.5966, 2.8222, 3.1232, 3.3299],
        [1.2844, 1.6499, 1.9679, 2.3388, 2.5923, 2.8279, 3.1176, 3.3233],
        [1.2837, 1.6487, 1.9659, 2.3357, 2.5882, 2.8227, 3.1107, 3.3150],
        [1.2830, 1.6470, 1.9640, 2.3330, 2.7850, 2.8190, 3.1060, 3.3100]
    ])
    rows = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
            21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50,
            55, 60, 65, 70, 80, 90, 100, 120, 150, 200, 250, 300, 400, 500]
    cols = [0.80, 0.90, 0.95, 0.98, 0.99, 0.995, 0.998, 0.999]
    row_i = get_closest_index(row, rows)
    col_i = get_closest_index(col, cols)
    return table[row_i, col_i]

